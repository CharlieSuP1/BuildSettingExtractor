<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>formattingTests</key>
	<array>
		<dict>
			<key>alignSettings</key>
			<false/>
			<key>linesBetweenSettings</key>
			<integer>3</integer>
			<key>includeBuildSettingInfo</key>
			<true/>
			<key>expectedResult</key>
			<string>// Duplicate Method Definitions
// 
// Warn about declaring the same method more than once within the same `@interface`.

CLANG_WARN__DUPLICATE_METHOD_MATCH = YES



// Strip Debug Symbols During Copy
// 
// Specifies whether binary files that are copied during the build, such as in a Copy
// Bundle Resources or Copy Files build phase, should be stripped of debugging symbols.
// It does not cause the linked product of a target to be stripped—use
// `STRIP_INSTALLED_PRODUCT` for that.

COPY_PHASE_STRIP = YES



// Debug Information Format
// 
// The type of debug information to produce.
// 
// * DWARF: Object files and linked products will use DWARF as the debug information
// format. [dwarf]
// * DWARF with dSYM File: Object files and linked products will use DWARF as the debug
// information format, and Xcode will also produce a dSYM file containing the debug
// information from the individual object files (except that a dSYM file is not needed
// and will not be created for static library or object file products). [dwarf-with-dsym]

DEBUG_INFORMATION_FORMAT = dwarf-with-dsym



// Enable Foundation Assertions
// 
// Controls whether assertion logic provided by `NSAssert` is included in the
// preprocessed source code or is elided during preprocessing. Disabling assertions can
// improve code performance.

ENABLE_NS_ASSERTIONS = NO
</string>
		</dict>
		<dict>
			<key>alignSettings</key>
			<false/>
			<key>linesBetweenSettings</key>
			<integer>0</integer>
			<key>includeBuildSettingInfo</key>
			<false/>
			<key>expectedResult</key>
			<string>CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
COPY_PHASE_STRIP = YES
DEBUG_INFORMATION_FORMAT = dwarf-with-dsym
ENABLE_NS_ASSERTIONS = NO
</string>
		</dict>
		<dict>
			<key>alignSettings</key>
			<true/>
			<key>linesBetweenSettings</key>
			<integer>0</integer>
			<key>includeBuildSettingInfo</key>
			<false/>
			<key>expectedResult</key>
			<string>CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
COPY_PHASE_STRIP                   = YES
DEBUG_INFORMATION_FORMAT           = dwarf-with-dsym
ENABLE_NS_ASSERTIONS               = NO
</string>
		</dict>
		<dict>
			<key>alignSettings</key>
			<true/>
			<key>linesBetweenSettings</key>
			<integer>1</integer>
			<key>includeBuildSettingInfo</key>
			<true/>
			<key>expectedResult</key>
			<string>// Duplicate Method Definitions
// 
// Warn about declaring the same method more than once within the same `@interface`.

CLANG_WARN__DUPLICATE_METHOD_MATCH = YES

// Strip Debug Symbols During Copy
// 
// Specifies whether binary files that are copied during the build, such as in a Copy
// Bundle Resources or Copy Files build phase, should be stripped of debugging symbols.
// It does not cause the linked product of a target to be stripped—use
// `STRIP_INSTALLED_PRODUCT` for that.

COPY_PHASE_STRIP                   = YES

// Debug Information Format
// 
// The type of debug information to produce.
// 
// * DWARF: Object files and linked products will use DWARF as the debug information
// format. [dwarf]
// * DWARF with dSYM File: Object files and linked products will use DWARF as the debug
// information format, and Xcode will also produce a dSYM file containing the debug
// information from the individual object files (except that a dSYM file is not needed
// and will not be created for static library or object file products). [dwarf-with-dsym]

DEBUG_INFORMATION_FORMAT           = dwarf-with-dsym

// Enable Foundation Assertions
// 
// Controls whether assertion logic provided by `NSAssert` is included in the
// preprocessed source code or is elided during preprocessing. Disabling assertions can
// improve code performance.

ENABLE_NS_ASSERTIONS               = NO
</string>
		</dict>
	</array>
</dict>
</plist>
